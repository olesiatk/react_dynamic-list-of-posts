{"version":3,"sources":["components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","api/posts.js","api/comments.js","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["PostsList","posts","getPostId","selectedPostId","className","map","post","key","id","userId","title","type","onClick","NewCommentForm","addComment","useState","name","setName","email","setEmail","body","setBody","errorEmptyStr","setErrorEmptyStr","onSubmit","event","preventDefault","trim","placeholder","value","onChange","target","required","request","url","fetch","then","response","json","result","data","getUserPosts","a","getPostDetails","postId","getPostComments","addPostComment","method","JSON","stringify","PostDetails","details","setDetails","comments","setComments","commentsShown","setCommentsShown","useEffect","api","deleteComment","commentId","length","comment","App","setPosts","setUserId","setSelectedPostId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8dbe71a5.chunk.js","sourcesContent":["import React from 'react';\nimport './PostsList.scss';\nimport PropTypes from 'prop-types';\n\nexport const PostsList = ({ posts, getPostId, selectedPostId }) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n\n    <ul className=\"PostsList__list\">\n      {[...posts].map(post => (\n        <li key={post.id} className=\"PostsList__item\">\n          <div>\n            <b>\n              [User #\n              {post.userId}\n              ]:\n              {' '}\n            </b>\n            {post.title}\n          </div>\n\n          <button\n            type=\"button\"\n            className=\"PostsList__button button\"\n            onClick={() => getPostId(post.id)}\n          >\n            {selectedPostId === post.id ? 'Close' : 'Open'}\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number,\n    title: PropTypes.string,\n  })).isRequired,\n  getPostId: PropTypes.func.isRequired,\n  selectedPostId: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\nimport PropTypes from 'prop-types';\n\nexport const NewCommentForm = ({ addComment }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n  const [errorEmptyStr, setErrorEmptyStr] = useState(false);\n\n  const createComment = () => {\n    if (name.trim() && email.trim() && body.trim()) {\n      addComment({\n        name, email, body,\n      });\n      setName('');\n      setEmail('');\n      setBody('');\n    } else {\n      setErrorEmptyStr(true);\n    }\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={(event) => {\n        event.preventDefault();\n        createComment();\n      }}\n    >\n      <div className=\"form-field\">\n        {errorEmptyStr && (\n          <p className=\"NewCommentForm__error\">You try to add ampty string</p>\n        )}\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={(event) => {\n            setErrorEmptyStr(false);\n            setName(event.target.value);\n          }}\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={(event) => {\n            setErrorEmptyStr(false);\n            setEmail(event.target.value);\n          }}\n          required\n\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={(event) => {\n            setErrorEmptyStr(false);\n            setBody(event.target.value);\n          }}\n          required\n\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  addComment: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nconst request = url => fetch(`${BASE_URL}${url}`)\n  .then(response => response.json())\n  .then(result => result.data);\n\nexport const getAllPosts = () => request(`/posts`);\n\nexport const getUserPosts = async(userId) => {\n  const result = await request(`/posts?userId=${userId}`);\n\n  return result;\n};\n\nexport const getPostDetails = async(postId) => {\n  const result = await request(`/posts/${postId}`);\n\n  return result;\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nconst request = url => fetch(`${BASE_URL}${url}`)\n  .then(response => response.json())\n  .then(result => result.data);\n\nexport const getPostComments = async(postId) => {\n  const result = await request(`/comments?postId=${postId}`);\n\n  return result;\n};\n\nconst post = (url, data) => fetch(`${BASE_URL}${url}`, {\n  method: 'POST',\n  body: JSON.stringify(data),\n})\n  .then(response => response.json())\n  .then(result => result.data);\n\nexport const addPostComment = ({\n  postId,\n  name,\n  email,\n  body,\n}) => post('/comments', {\n  postId,\n  name,\n  email,\n  body,\n});\n\nexport const deletePostComment = postId => fetch(\n  `${BASE_URL}/comments/${postId}`, {\n    method: 'DELETE',\n  },\n)\n  .then(response => response.json())\n  .then(result => result.data);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { getPostDetails } from '../../api/posts';\nimport * as api from '../../api/comments';\n\nexport const PostDetails = ({ postId }) => {\n  const [details, setDetails] = useState({});\n  const [comments, setComments] = useState({});\n  const [commentsShown, setCommentsShown] = useState(true);\n\n  useEffect(() => {\n    getPostDetails(postId).then(setDetails);\n    api.getPostComments(postId).then(setComments);\n  }, [postId]);\n\n  const deleteComment = (commentId) => {\n    api.deletePostComment(commentId)\n      .then(() => api.getPostComments(postId))\n      .then(setComments);\n  };\n\n  const addComment = ({ name, email, body }) => {\n    api.addPostComment({\n      postId, name, email, body,\n    })\n      .then(() => api.getPostComments(postId))\n      .then(setComments);\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n      {postId && details ? (\n        <>\n          <section className=\"PostDetails__post\">\n            <p>\n              User: #\n              {details.userId}\n            </p>\n            <p>\n              Text:\n              {details.title}\n            </p>\n          </section>\n\n          <section className=\"PostDetails__comments\">\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => {\n                setCommentsShown(!commentsShown);\n              }}\n            >\n              {commentsShown\n                ? `Hide ${comments.length} comments`\n                : `Show ${comments.length} comments`\n              }\n            </button>\n            {commentsShown && (\n              <ul className=\"PostDetails__list\">\n                {comments.map(comment => (\n                  <li key={comment.id} className=\"PostDetails__list-item\">\n                    <button\n                      type=\"button\"\n                      className=\"PostDetails__remove-button button\"\n                      onClick={() => deleteComment(comment.id)}\n                    >\n                      X\n                    </button>\n                    <p>{comment.body}</p>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </section>\n\n          <section>\n            <div className=\"PostDetails__form-wrapper\">\n              <NewCommentForm addComment={addComment} />\n            </div>\n          </section>\n        </>\n      ) : '<<<---Select post'}\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  postId: PropTypes.number.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUserPosts, getAllPosts } from './api/posts';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [userId, setUserId] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  const getPostId = (postId) => {\n    if (selectedPostId === postId) {\n      setSelectedPostId(0);\n    } else {\n      setSelectedPostId(postId);\n    }\n  };\n\n  useEffect(() => {\n    if (!userId) {\n      getAllPosts().then(setPosts);\n    } else {\n      getUserPosts(userId).then(setPosts);\n    }\n  }, [userId]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={(event) => {\n              setUserId(+event.target.value);\n            }}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            selectedPostId={selectedPostId}\n            getPostId={getPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <PostDetails\n            postId={selectedPostId}\n          />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}