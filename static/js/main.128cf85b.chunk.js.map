{"version":3,"sources":["components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","api/posts.js","api/comments.js","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["PostsList","posts","getPostId","selectedPostId","className","map","post","key","id","userId","title","type","onClick","NewCommentForm","addComment","useState","name","setName","email","setEmail","body","setBody","onSubmit","event","preventDefault","placeholder","value","onChange","target","request","url","fetch","then","response","json","result","data","getUserPosts","a","getPostDetails","postId","getPostComments","addPostComment","method","JSON","stringify","PostDetails","details","setDetails","comments","setComments","commentsShown","setCommentsShown","useEffect","api","deleteComment","commentId","length","comment","App","setPosts","setUserId","setSelectedPostId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.128cf85b.chunk.js","sourcesContent":["import React from 'react';\nimport './PostsList.scss';\nimport PropTypes from 'prop-types';\n\nexport const PostsList = ({ posts, getPostId, selectedPostId }) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n\n    <ul className=\"PostsList__list\">\n      {[...posts].map(post => (\n        <li key={post.id} className=\"PostsList__item\">\n          <div>\n            <b>\n              [User #\n              {post.userId}\n              ]:\n              {' '}\n            </b>\n            {post.title}\n          </div>\n\n          <button\n            type=\"button\"\n            className=\"PostsList__button button\"\n            onClick={() => getPostId(post.id)}\n          >\n            {selectedPostId === post.id ? 'Close' : 'Open'}\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number,\n    title: PropTypes.string,\n  })).isRequired,\n  getPostId: PropTypes.func.isRequired,\n  selectedPostId: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\nimport PropTypes from 'prop-types';\n\nexport const NewCommentForm = ({ addComment }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const createComment = () => {\n    addComment({\n      name, email, body,\n    });\n    setName('');\n    setEmail('');\n    setBody('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={(event) => {\n        event.preventDefault();\n        createComment();\n      }}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={event => setName(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={event => setEmail(event.target.value)}\n\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={event => setBody(event.target.value)}\n\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  addComment: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nconst request = url => fetch(`${BASE_URL}${url}`)\n  .then(response => response.json())\n  .then(result => result.data);\n\nexport const getAllPosts = () => request(`/posts`);\n\nexport const getUserPosts = async(userId) => {\n  const result = await request(`/posts?userId=${userId}`);\n\n  return result;\n};\n\nexport const getPostDetails = async(postId) => {\n  const result = await request(`/posts/${postId}`);\n\n  return result;\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nconst request = url => fetch(`${BASE_URL}${url}`)\n  .then(response => response.json())\n  .then(result => result.data);\n\nexport const getPostComments = async(postId) => {\n  const result = await request(`/comments?postId=${postId}`);\n\n  return result;\n};\n\nconst post = (url, data) => fetch(`${BASE_URL}${url}`, {\n  method: 'POST',\n  body: JSON.stringify(data),\n})\n  .then(response => response.json())\n  .then(result => result.data);\n\n// eslint-disable-next-line\nexport const addPostComment = ({ id, postId, name, email, body }) => post('/comments', {\n  postId,\n  name,\n  email,\n  body,\n});\n\n// eslint-disable-next-line\nexport const deletePostComment = postId => fetch(`${BASE_URL}/comments/${postId}`, {\n  method: 'DELETE',\n})\n  .then(response => response.json())\n  .then(result => result.data);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { getPostDetails } from '../../api/posts';\nimport * as api from '../../api/comments';\n\nexport const PostDetails = ({ postId }) => {\n  const [details, setDetails] = useState({});\n  const [comments, setComments] = useState({});\n  const [commentsShown, setCommentsShown] = useState(true);\n\n  useEffect(() => {\n    getPostDetails(postId).then(setDetails);\n    api.getPostComments(postId).then(setComments);\n  }, [postId]);\n\n  const deleteComment = (commentId) => {\n    api.deletePostComment(commentId)\n      .then(() => api.getPostComments(postId))\n      .then(setComments);\n  };\n\n  const addComment = ({ name, email, body }) => {\n    api.addPostComment({\n      postId, name, email, body,\n    })\n      .then(() => api.getPostComments(postId))\n      .then(setComments);\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n      {postId && details ? (\n        <>\n          <section className=\"PostDetails__post\">\n            <p>\n              User: #\n              {details.userId}\n            </p>\n            <p>\n              Text:\n              {details.title}\n            </p>\n          </section>\n\n          <section className=\"PostDetails__comments\">\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => {\n                setCommentsShown(!commentsShown);\n              }}\n            >\n              {commentsShown\n                ? `Hide ${comments.length} comments`\n                : `Show ${comments.length} comments`\n              }\n            </button>\n            {commentsShown && (\n              <ul className=\"PostDetails__list\">\n                {comments.map(comment => (\n                  <li key={comment.id} className=\"PostDetails__list-item\">\n                    <button\n                      type=\"button\"\n                      className=\"PostDetails__remove-button button\"\n                      onClick={() => deleteComment(comment.id)}\n                    >\n                      X\n                    </button>\n                    <p>{comment.body}</p>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </section>\n\n          <section>\n            <div className=\"PostDetails__form-wrapper\">\n              <NewCommentForm addComment={addComment} />\n            </div>\n          </section>\n        </>\n      ) : '<<<---Select post'}\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  postId: PropTypes.number.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUserPosts, getAllPosts } from './api/posts';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [userId, setUserId] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  const getPostId = (postId) => {\n    if (selectedPostId === postId) {\n      setSelectedPostId(0);\n    } else {\n      setSelectedPostId(postId);\n    }\n  };\n\n  useEffect(() => {\n    if (userId === 0) {\n      getAllPosts().then(setPosts);\n    } else {\n      getUserPosts(userId).then(setPosts);\n    }\n  }, [userId]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={(event) => {\n              setUserId(+event.target.value);\n            }}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            selectedPostId={selectedPostId}\n            getPostId={getPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <PostDetails\n            postId={selectedPostId}\n          />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}